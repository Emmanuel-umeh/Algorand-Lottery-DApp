#pragma version 6
txn ApplicationID
int 0
==
bnz main_l34
txn OnCompletion
int DeleteApplication
==
bnz main_l33
txn OnCompletion
int OptIn
==
bnz main_l32
txna ApplicationArgs 0
byte "start"
==
bnz main_l25
txna ApplicationArgs 0
byte "buy"
==
bnz main_l19
txna ApplicationArgs 0
byte "end"
==
bnz main_l15
txna ApplicationArgs 0
byte "check"
==
bnz main_l10
txna ApplicationArgs 0
byte "fund"
==
bnz main_l9
err
main_l9:
txn NumAccounts
int 1
==
byte "STATUS"
app_global_get
int 2
==
&&
byte "POOL"
app_global_get
int 1000000
>
&&
global CurrentApplicationAddress
balance
int 1000000
>
&&
assert
byte "POOL"
app_global_get
store 21
byte "NEXTLOTTERY"
app_global_get
store 22
txna Accounts 1
load 22
callsub sendfunds_1
byte "POOL"
load 21
load 22
-
app_global_put
byte "STATUS"
int 3
app_global_put
int 1
return
main_l10:
txna Accounts 0
txna Applications 0
app_opted_in
global LatestTimestamp
byte "END"
app_global_get
>
&&
byte "STATUS"
app_global_get
int 2
==
&&
txna Accounts 0
byte "ISWINNER"
app_local_get
int 0
==
&&
assert
byte "WINNINGTICKET"
app_global_get
store 4
load 4
int 1000
/
store 0
load 4
int 1000
%
int 8
/
store 2
load 4
int 1000
%
int 8
%
store 3
load 0
callsub convertuinttobytes_0
store 1
txna Accounts 0
txna Applications 0
load 1
app_local_get_ex
store 6
store 5
load 6
!
bnz main_l14
main_l11:
txna Accounts 0
load 1
app_local_get
load 2
getbyte
load 3
getbit
store 19
load 19
int 1
==
bnz main_l13
main_l12:
txna Accounts 0
byte "ISWINNER"
load 19
int 1
+
app_local_put
int 1
return
main_l13:
byte "WINNERREWARD"
app_global_get
store 20
txna Accounts 0
load 20
callsub sendfunds_1
byte "WINNER"
txn Sender
app_global_put
b main_l12
main_l14:
txna Accounts 0
load 1
byte 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
app_local_put
b main_l11
main_l15:
txna Accounts 0
txna Applications 0
app_opted_in
byte "TICKETS"
app_global_get
int 5
>=
byte "PLAYERS"
app_global_get
int 2
>=
&&
int 0
==
||
global LatestTimestamp
byte "END"
app_global_get
>
&&
assert
byte "TICKETS"
app_global_get
int 5
>=
byte "PLAYERS"
app_global_get
int 2
>=
&&
bnz main_l18
gtxn 0 RekeyTo
global ZeroAddress
==
assert
byte "DURATION"
app_global_get
store 18
byte "END"
global LatestTimestamp
load 18
+
app_global_put
main_l17:
int 1
return
main_l18:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
assert
global GroupSize
int 2
==
txn GroupIndex
int 0
==
&&
txn NumAccounts
int 3
==
&&
gtxn 1 TypeEnum
int pay
==
&&
gtxn 1 Receiver
global CurrentApplicationAddress
==
&&
gtxn 1 CloseRemainderTo
global ZeroAddress
==
&&
gtxn 1 Amount
int 1000000
>=
&&
assert
byte "x"
byte "a"
app_global_get
byte "x"
app_global_get
*
byte "c"
app_global_get
+
byte "m"
app_global_get
%
app_global_put
byte "WINNINGTICKET"
byte "x"
app_global_get
byte "TICKETS"
app_global_get
%
app_global_put
byte "POOL"
app_global_get
int 5
*
int 100
/
store 16
byte "WINNERREWARD"
byte "POOL"
app_global_get
int 50
*
int 100
/
app_global_put
byte "NEXTLOTTERY"
byte "POOL"
app_global_get
int 35
*
int 100
/
app_global_put
txna Accounts 1
load 16
callsub sendfunds_1
txna Accounts 2
load 16
callsub sendfunds_1
txna Accounts 3
load 16
callsub sendfunds_1
byte "POOL"
app_global_get
store 17
byte "POOL"
load 17
load 16
int 3
*
-
app_global_put
byte "STATUS"
int 2
app_global_put
b main_l17
main_l19:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
assert
txna Accounts 0
txna Applications 0
app_opted_in
global GroupSize
int 2
==
&&
txn GroupIndex
int 0
==
&&
txn NumAppArgs
int 2
==
&&
global LatestTimestamp
byte "END"
app_global_get
<
&&
byte "STATUS"
app_global_get
int 1
==
&&
txna Accounts 0
byte "TICKETCOUNT"
app_local_get
int 1000
<=
&&
byte "TICKETS"
app_global_get
int 13000
<
&&
txna ApplicationArgs 1
btoi
int 100
<=
&&
gtxn 1 TypeEnum
int pay
==
&&
gtxn 1 Receiver
global CurrentApplicationAddress
==
&&
gtxn 1 CloseRemainderTo
global ZeroAddress
==
&&
gtxn 1 Amount
byte "PRICE"
app_global_get
txna ApplicationArgs 1
btoi
*
==
&&
gtxn 1 Sender
gtxn 0 Sender
==
&&
assert
byte "TICKETS"
app_global_get
store 12
load 12
txna ApplicationArgs 1
btoi
+
store 13
txna Accounts 0
byte "TICKETCOUNT"
app_local_get
store 14
load 12
store 4
main_l20:
load 4
load 13
<
bnz main_l22
txna Accounts 0
byte "TICKETCOUNT"
load 14
txna ApplicationArgs 1
btoi
+
app_local_put
byte "TICKETS"
load 13
app_global_put
byte "POOL"
app_global_get
store 15
byte "POOL"
load 15
gtxn 1 Amount
+
app_global_put
byte "x"
byte "a"
app_global_get
byte "x"
app_global_get
*
byte "c"
app_global_get
+
byte "m"
app_global_get
%
app_global_put
int 1
return
main_l22:
load 4
int 1000
/
store 0
load 4
int 1000
%
int 8
/
store 2
load 4
int 1000
%
int 8
%
store 3
load 0
callsub convertuinttobytes_0
store 1
txna Accounts 0
txna Applications 0
load 1
app_local_get_ex
store 6
store 5
load 6
!
bnz main_l24
main_l23:
txna Accounts 0
load 1
txna Accounts 0
load 1
app_local_get
load 2
txna Accounts 0
load 1
app_local_get
load 2
getbyte
load 3
int 1
setbit
setbyte
app_local_put
load 4
int 1
+
store 4
b main_l20
main_l24:
txna Accounts 0
load 1
byte 0x000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
app_local_put
b main_l23
main_l25:
gtxn 0 RekeyTo
global ZeroAddress
==
gtxn 1 RekeyTo
global ZeroAddress
==
&&
assert
global GroupSize
int 2
==
txn GroupIndex
int 0
==
&&
gtxn 1 TypeEnum
int pay
==
&&
gtxn 1 Receiver
global CurrentApplicationAddress
==
&&
gtxn 1 CloseRemainderTo
global ZeroAddress
==
&&
gtxn 1 Amount
int 1000000
>=
&&
gtxn 1 Sender
gtxn 0 Sender
==
&&
txn NumApplications
int 1
==
&&
assert
byte "START"
global LatestTimestamp
app_global_put
byte "END"
global LatestTimestamp
byte "DURATION"
app_global_get
+
app_global_put
byte "STARTER"
txn Sender
app_global_put
byte "STATUS"
int 1
app_global_put
byte "PREVAPP"
app_global_get
int 0
!=
txna Applications 1
byte "PREVAPP"
app_global_get
==
&&
bnz main_l27
main_l26:
int 1
return
main_l27:
txn Fee
global MinTxnFee
int 2
*
>=
assert
txna Applications 1
byte "x"
app_global_get_ex
store 9
store 8
load 9
bnz main_l31
main_l28:
itxn_begin
int appl
itxn_field TypeEnum
txna Applications 1
itxn_field ApplicationID
int NoOp
itxn_field OnCompletion
byte "fund"
itxn_field ApplicationArgs
global CurrentApplicationAddress
itxn_field Accounts
int 0
itxn_field Fee
itxn_submit
txna Applications 1
byte "NEXTLOTTERY"
app_global_get_ex
store 11
store 10
load 11
bnz main_l30
byte "POOL"
int 0
app_global_put
b main_l26
main_l30:
byte "POOL"
load 10
app_global_put
b main_l26
main_l31:
byte "x"
load 8
app_global_put
b main_l28
main_l32:
global LatestTimestamp
byte "END"
app_global_get
<
byte "STATUS"
app_global_get
int 1
==
&&
byte "TICKETS"
app_global_get
int 13000
<
&&
assert
byte "PLAYERS"
app_global_get
store 7
txna Accounts 0
byte "ID"
load 7
int 1
+
app_local_put
byte "PLAYERS"
load 7
int 1
+
app_global_put
txna Accounts 0
byte "TICKETCOUNT"
int 0
app_local_put
txna Accounts 0
byte "ISWINNER"
int 0
app_local_put
int 1
return
main_l33:
txn Sender
global CreatorAddress
==
byte "STATUS"
app_global_get
int 0
==
byte "STATUS"
app_global_get
int 3
==
||
&&
return
main_l34:
gtxn 0 RekeyTo
global ZeroAddress
==
assert
txn Note
byte "algorandlottery:uv2"
==
txn NumAppArgs
int 2
==
&&
txna ApplicationArgs 0
btoi
int 0
!=
&&
txna ApplicationArgs 1
btoi
int 0
>
&&
txn NumApplications
int 1
==
&&
assert
byte "PREVAPP"
txna Applications 1
app_global_put
byte "DURATION"
txna ApplicationArgs 0
btoi
app_global_put
byte "PRICE"
txna ApplicationArgs 1
btoi
app_global_put
byte "PLAYERS"
int 0
app_global_put
byte "TICKETS"
int 0
app_global_put
byte "POOL"
int 0
app_global_put
byte "STATUS"
int 0
app_global_put
byte "a"
int 75
app_global_put
byte "c"
int 74
app_global_put
byte "m"
int 65537
app_global_put
byte "x"
int 28652
app_global_put
int 1
return

// convert_uint_to_bytes
convertuinttobytes_0:
store 23
load 23
int 0
==
bnz convertuinttobytes_0_l5
byte ""
store 24
load 23
store 25
convertuinttobytes_0_l2:
load 25
int 0
>
bnz convertuinttobytes_0_l4
load 24
b convertuinttobytes_0_l6
convertuinttobytes_0_l4:
load 25
int 10
%
store 26
byte "0123456789"
load 26
load 26
int 1
+
substring3
load 24
concat
store 24
load 25
int 10
/
store 25
b convertuinttobytes_0_l2
convertuinttobytes_0_l5:
byte "0"
convertuinttobytes_0_l6:
retsub

// send_funds
sendfunds_1:
store 28
store 27
itxn_begin
int pay
itxn_field TypeEnum
load 27
itxn_field Receiver
load 28
itxn_field Amount
itxn_submit
retsub